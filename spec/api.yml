openapi: 3.0.0
info:
  title: TEXTSTEP API
  version: "0.10.0"
  description: ''
components:
  securitySchemes:
    AuthTokenHeader:
      type: apiKey
      in: header
      name: X-Auth-Token
    AuthTokenQuery:
      type: apiKey
      in: query
      name: access_token
  parameters:
    path:
      name: path
      in: query
      required: true
      description: File path
      schema:
        type: string
  schemas:
    PermissionMap:
      type: object
      description: Access control list
      example:
        read: [root, users]
        write: [root]
        grant: [root]
      additionalProperties:
        type: array
        description: List of groups
        items:
          type: string
    File:
      type: object
      properties:
        name:
          type: string
          description: File name
          example: my-file.md
        path:
          type: string
          description: Absolute file path
          example: /home/user/my-file.md
        type:
          type: string
          description: Type of object
          enum: [file, directory]
        size:
          type: integer
          description: Size of file in bytes
          example: 4096
        modified:
          type: string
          format: date-time
          example: "2019-06-02T14:13:22+00:00"
        created:
          type: string
          format: date-time
          example: "2019-06-02T14:13:22+00:00"
        permissions:
          $ref: '#/components/schemas/PermissionMap'
        read:
          type: boolean
          description: Whether the current user has read access to the file
        write:
          type: boolean
          description: Whether the current user has write access to the file
    ExtendedFile:
      allOf:
        - $ref: '#/components/schemas/File'
        - type: object
          properties:
            files:
              type: array
              items:
                $ref: '#/components/schemas/File'
servers:
  - url: http://localhost/blogstep/index.php/api
security:
  - AuthTokenHeader: []
  - AuthTokenQuery: []
paths:
  /session:
    post:
      description: Log in
      tags: [user]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Session created
          content:
            application/json:
              schema:
                type: object
                properties:
                  sessionId:
                    type: string
    delete:
      description: Invalidates the session
      tags: [user]
      responses:
        204:
          description: Session deleted.
  /who-am-i:
    get:
      description: Retrieve username and home directory of current user
      tags: [user]
      responses:
        200:
          description: List of files
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: The username
                  home:
                    type: string
                    description: Absolute path to user's home directory
                  shell:
                    type: string
                    description: The name of the shell application
                  version:
                    type: string
                    description: Version string
  /file:
    get:
      description: List file attributes and directory content
      tags: [files]
      parameters: 
        - $ref: '#/components/parameters/path'
        - name: list
          in: query
          description: Whether to return extended file object containing list of files in directory.
          schema:
            type: boolean
      responses:
        200:
          description: A file object
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/File'
                  - $ref: '#/components/schemas/ExtendedFile'
    post:
      description: Create file or directory
      tags: [files]
      parameters:
        - $ref: '#/components/parameters/path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - file
                    - directory
                recursive:
                  type: boolean
                  description: Whether to recursively create missing directories
      responses:
        200:
          description: File attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
    put:
      description: Update file attributes
      tags: [files]
      parameters:
        - $ref: '#/components/parameters/path'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  $ref: '#/components/schemas/PermissionMap'
                recursive:
                  type: boolean
                  description: Whether to recursively update descendants
      responses:
        200:
          description: File attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
    delete:
      description: Delete files
      tags: [files]
      parameters: 
        - name: path
          in: query
          schema:
            type: string
        - name: paths[]
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        204:
          description: OK
  /content:
    get:
      description: Get file contents
      tags: [files]
      parameters: 
        - $ref: '#/components/parameters/path'
        - name: force
          in: query
          description: If true, the Content-Disposition header of the response is set to "attachment"
          schema:
            type: boolean
      responses:
        200:
          description: File contents
    post:
      description: Upload files
      tags: [files]
      parameters: 
        - $ref: '#/components/parameters/path'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files[]:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        204:
          description: File uploaded
    put:
      description: Replace contents of file or append content to the end of the file
      tags: [files]
      parameters: 
        - $ref: '#/components/parameters/path'
        - name: append
          in: query
          description: If true, request body is appended to file
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        204:
          description: File written
    delete:
      description: Truncate file
      tags: [files]
      parameters: 
        - $ref: '#/components/parameters/path'
      responses:
        204:
          description: File truncated
  /content/{name}:
    get:
      description: Get file contents
      tags: [files]
      parameters: 
        - in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/path'
        - name: force
          in: query
          description: If true, the Content-Disposition header of the response is set to "attachment"
          schema:
            type: boolean
      responses:
        200:
          description: File contents
  /copy:
    post:
      description: Copy a file or directory
      tags: [files]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paths:
                  type: object
                  example:
                    /source1: /destination1
                    /source2: /destination2
                  additionalProperties:
                    type: string
                path:
                  type: string
                  example: /source
                destination:
                  type: string
                  example: destination
      responses:
        204:
          description: File copied
  /move:
    post:
      description: Move a file or directory
      tags: [files]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paths:
                  type: object
                  example:
                    /source1: /destination1
                    /source2: /destination2
                  additionalProperties:
                    type: string
                path:
                  type: string
                  example: /source
                destination:
                  type: string
                  example: destination
      responses:
        204:
          description: File moved
  /thumbnail:
    get:
      description: Get a file thumbnail
      tags: [files]
      parameters: 
        - $ref: '#/components/parameters/path'
      responses:
        200:
          description: A thumbnail
  /storage:
    get:
      description: Get one or more documents from storage
      tags: [files]
      parameters: 
        - $ref: '#/components/parameters/path'
        - name: key
          in: query
          description: Document key
          schema:
            type: string
      responses:
        200:
          description: The document associated with the key or a list of documents if no key was provided.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
    post:
      description: Add a document to storage
      tags: [files]
      parameters:
        - $ref: '#/components/parameters/path'
        - name: key
          in: query
          description: Document key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        200:
          description: File attributes
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
    put:
      description: Update a document in storage
      tags: [files]
      parameters:
        - $ref: '#/components/parameters/path'
        - name: key
          in: query
          description: Document key
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        200:
          description: File attributes
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
    delete:
      description: Delete files
      tags: [files]
      parameters: 
        - name: path
          in: query
          schema:
            type: string
        - name: paths[]
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        204:
          description: OK
  /mount:
    post:
      description: Mount host file system
      tags: [system]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - path
                - target
              properties:
                path:
                  type: string
                target:
                  type: string
      responses:
        200:
          description: File system mounted
  /unmount:
    post:
      description: Unmount file system
      tags: [system]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - path
              properties:
                path:
                  type: string
      responses:
        200:
          description: File system mounted
  /build:
    post:
      description: Generate site
      tags: [static site generation]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: string
                  enum:
                    - all
                    - content
                    - template
                    - assemble
                    - install
      responses:
        200:
          description: Build status
  /preview:
    get:
      description: Preview site
      tags: [static site generation]
      security: []
      parameters: 
        - in: query
          name: access_token
          required: true
          schema:
            type: string
        - in: query
          name: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Generated content for node

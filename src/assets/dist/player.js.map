{"version":3,"sources":["webpack:///dist/player.js","webpack:///./common/paths.js","webpack:///./player.js"],"names":["webpackJsonp","4","module","exports","dirName","path","replace","fileName","convert","cwd","trim","startsWith","names","split","stack","i","length","pop","push","join","58","__webpack_require__","$","BLOGSTEP","init","app","$videoContainer","frame","find","$video","paused","addMenu","addItem","onOpen","args","setTitle","attr","PATH","append","onSuspend","pause","onResume","play","onClose","remove"],"mappings":"AAAAA,cAAc,KAERC,EACA,SAAUC,EAAQC,GCQxB,QAAAC,GAAAC,GAEA,GAAAA,KAAAC,QAAA,eACA,YAAAD,EACA,IAEAA,EAGA,QAAAE,GAAAF,GAEA,MAAAA,GAAAC,QAAA,YAGA,QAAAE,GAAAH,EAAAI,GAEAJ,IAAAK,OACAL,EAAAM,WAAA,OACAN,EAAAI,EAAA,IAAAJ,EAIA,QAFAO,GAAAP,EAAAQ,MAAA,KACAC,KACAC,EAAA,EAAmBA,EAAAH,EAAAI,OAAkBD,IACrC,OAAAH,EAAAG,GACAD,EAAAE,QAAA,GACAF,EAAAG,MAES,KAAAL,EAAAG,IAAA,MAAAH,EAAAG,IACTD,EAAAI,KAAAN,EAAAG,GAGA,WAAAD,EAAAK,KAAA,KAnCAhB,EAAAC,UACAD,EAAAI,WACAJ,EAAAK,WD2CMY,GACA,SAAUlB,EAAQC,EAASkB,GE7CjC,GAAAC,GAAAD,EAAA,EACAA,GAAA,EAEAE,UAAAC,KAAA,kBAAAC,GACA,GAAAC,GAAAD,EAAAE,MAAAC,KAAA,WACAC,EAAA,KACAC,GAAA,CAEAL,GAAAM,QAAA,UACAC,QAAA,iBAEAP,EAAAQ,OAAA,SAAAR,EAAAS,GACAT,EAAAU,SAAAD,EAAA7B,KAAA,aAEAwB,EAAAP,EAAA,mCACAO,EAAAO,KAAA,MAAAb,SAAAc,KAAA,sBAAAH,EAAA7B,MACAqB,EAAAY,OAAAT,IAGAJ,EAAAc,UAAA,SAAAd,GACAK,EAAAD,EAAA,GAAAC,OACAD,EAAA,GAAAW,SAGAf,EAAAgB,SAAA,SAAAhB,GACAK,GACAD,EAAA,GAAAa,QAIAjB,EAAAkB,QAAA,SAAAlB,GACAI,EAAAe,eF8DG","file":"dist/player.js","sourcesContent":["webpackJsonp([10],{\n\n/***/ 4:\n/***/ (function(module, exports) {\n\n/* \n * BlogSTEP \n * Copyright (c) 2016 Niels Sonnich Poulsen (http://nielssp.dk)\n * Licensed under the MIT license.\n * See the LICENSE file or http://opensource.org/licenses/MIT for more information.\n */\n\nexports.dirName = dirName;\nexports.fileName = fileName;\nexports.convert = convert;\n\nfunction dirName(path)\n{\n    var path = path.replace(/\\/[^\\/]+$/, '');\n    if (path === '') {\n        return '/';\n    }\n    return path;\n}\n\nfunction fileName(path)\n{\n    return path.replace(/^.*\\//, '');\n}\n\nfunction convert(path, cwd)\n{\n    path = path.trim();\n    if (!path.startsWith('/')) {\n        path = cwd + '/' + path;\n    }\n    var names = path.split('/');\n    var stack = [];\n    for (var i = 0; i < names.length; i++) {\n        if (names[i] === '..') {\n            if (stack.length >= 1) {\n                stack.pop();\n            }\n        } else if (names[i] !== '' && names[i] !== '.') {\n            stack.push(names[i]);\n        }\n    }\n    return '/' + stack.join('/');\n}\n\n/***/ }),\n\n/***/ 58:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* \n * BlogSTEP\n * Copyright (c) 2017 Niels Sonnich Poulsen (http://nielssp.dk)\n * Licensed under the MIT license.\n * See the LICENSE file or http://opensource.org/licenses/MIT for more information.\n */\n\n\nvar $ = __webpack_require__(0);\nvar paths = __webpack_require__(4);\n\nBLOGSTEP.init('player', function (app) {\n    var $videoContainer = app.frame.find('#player');\n    var $video = null;\n    var paused = false;\n\n    var menu = app.addMenu('Player');\n    menu.addItem('Close', 'close');    \n\n    app.onOpen = function (app, args) {\n\tapp.setTitle(args.path + ' – Player');\n\t\n\t$video = $(\"<video autoplay controls loop/>\");\n\t$video.attr('src', BLOGSTEP.PATH + '/api/download?path=' + args.path);\n\t$videoContainer.append($video);\n    };\n    \n    app.onSuspend = function (app) {\n\tpaused = $video[0].paused;\n\t$video[0].pause();\n    };\n    \n    app.onResume = function (app) {\n\tif (!paused) {\n\t    $video[0].play();\n\t}\n    };\n    \n    app.onClose = function (app) {\n\t$video.remove();\n    };\n});\n\n\n/***/ })\n\n},[58]);\n\n\n// WEBPACK FOOTER //\n// dist/player.js","/* \n * BlogSTEP \n * Copyright (c) 2016 Niels Sonnich Poulsen (http://nielssp.dk)\n * Licensed under the MIT license.\n * See the LICENSE file or http://opensource.org/licenses/MIT for more information.\n */\n\nexports.dirName = dirName;\nexports.fileName = fileName;\nexports.convert = convert;\n\nfunction dirName(path)\n{\n    var path = path.replace(/\\/[^\\/]+$/, '');\n    if (path === '') {\n        return '/';\n    }\n    return path;\n}\n\nfunction fileName(path)\n{\n    return path.replace(/^.*\\//, '');\n}\n\nfunction convert(path, cwd)\n{\n    path = path.trim();\n    if (!path.startsWith('/')) {\n        path = cwd + '/' + path;\n    }\n    var names = path.split('/');\n    var stack = [];\n    for (var i = 0; i < names.length; i++) {\n        if (names[i] === '..') {\n            if (stack.length >= 1) {\n                stack.pop();\n            }\n        } else if (names[i] !== '' && names[i] !== '.') {\n            stack.push(names[i]);\n        }\n    }\n    return '/' + stack.join('/');\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./common/paths.js\n// module id = 4\n// module chunks = 0 1 3 4 5 10","/* \n * BlogSTEP\n * Copyright (c) 2017 Niels Sonnich Poulsen (http://nielssp.dk)\n * Licensed under the MIT license.\n * See the LICENSE file or http://opensource.org/licenses/MIT for more information.\n */\n\n\nvar $ = require('jquery');\nvar paths = require('./common/paths');\n\nBLOGSTEP.init('player', function (app) {\n    var $videoContainer = app.frame.find('#player');\n    var $video = null;\n    var paused = false;\n\n    var menu = app.addMenu('Player');\n    menu.addItem('Close', 'close');    \n\n    app.onOpen = function (app, args) {\n\tapp.setTitle(args.path + ' – Player');\n\t\n\t$video = $(\"<video autoplay controls loop/>\");\n\t$video.attr('src', BLOGSTEP.PATH + '/api/download?path=' + args.path);\n\t$videoContainer.append($video);\n    };\n    \n    app.onSuspend = function (app) {\n\tpaused = $video[0].paused;\n\t$video[0].pause();\n    };\n    \n    app.onResume = function (app) {\n\tif (!paused) {\n\t    $video[0].play();\n\t}\n    };\n    \n    app.onClose = function (app) {\n\t$video.remove();\n    };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./player.js\n// module id = 58\n// module chunks = 10"],"sourceRoot":""}
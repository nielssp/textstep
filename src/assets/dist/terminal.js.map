{"version":3,"sources":["webpack:///dist/terminal.js","webpack:///./common/actions.js?e0fb**","webpack:///./terminal.js"],"names":["webpackJsonp","2","module","exports","__webpack_require__","bind","key","action","parts","toLowerCase","split","e","ctrlKey","altKey","shiftKey","length","i","keyMap","defineAction","name","callback","actions","$","click","preventDefault","stopPropagation","activate","enable","attr","forEach","disable","define","window","keydown","defaultPrevented","console","log","hasOwnProperty","51","convertPath","path","trim","startsWith","user","home","substr","cwd","names","stack","pop","push","join","flush","$terminal","val","buffer","scrollTop","scrollHeight","write","content","writeLine","readLine","focus","readCallback","exec","command","data","success","TOKEN","ajax","url","PATH","method","error","xhr","status","statusText","complete","prompt","username","cmdHistoryPos","line","m","match","commands","JSON","parse","stringify","cmdHistory","replace","months","location","href","clear","args","cd","nwd","type","pwd","ls","files","file","modeString","owner","group","date","Date","modified","getFullYear","getMonth","getDate","touch","mkdir","rm","cp","destination","mv","cat","exit","open","edit","cedit","start","selectionStart","end","selectionEnd","blur"],"mappings":"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","file":"dist/terminal.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 2:\n/***/ function(module, exports, __webpack_require__) {\n\n/*\n * BlogSTEP \n * Copyright (c) 2016 Niels Sonnich Poulsen (http://nielssp.dk)\n * Licensed under the MIT license.\n * See the LICENSE file or http://opensource.org/licenses/MIT for more information.\n */\n\nvar $ = __webpack_require__(1);\n\nexports.define = defineAction;\nexports.enable = enable;\nexports.disable = disable;\nexports.activate = activate;\nexports.bind = bind;\n\nvar actions = {};\n\nvar keyMap = {};\n\n$(window).keydown(function (e) {\n    if (e.defaultPrevented) {\n        return;\n    }\n    var key = '';\n    if (e.ctrlKey) {\n        key += 'c-';\n    }\n    if (e.altKey) {\n        key += 'a-';\n    }\n    if (e.shiftKey) {\n        key += 's-';\n    }\n    key += e.key.toLowerCase();\n    console.log('pressed ' + key);\n    if (keyMap.hasOwnProperty(key)) {\n        activate(keyMap[key]);\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n});\n\nfunction bind(key, action)\n{\n    var parts = key.toLowerCase().split(/-|\\+/);\n    var e = { ctrlKey: '', altKey: '', shiftKey: '' };\n    var key = parts[parts.length - 1];\n    for (var i = 0; i < parts.length - 1; i++) {\n        switch (parts[i]) {\n            case 'c':\n                e.ctrlKey = 'c-';\n                break;\n            case 'a':\n                e.altKey = 'a-';\n                break;\n            case 's':\n                e.shiftKey = 's-';\n                break;\n        }\n    }\n    key = e.ctrlKey + e.altKey + e.shiftKey + key;\n    keyMap[key] = action;\n}\n\nfunction defineAction(name, callback)\n{\n    actions[name] = callback;\n    $('[data-action=\"' + name + '\"]').click(function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        callback();\n        return false;\n    });\n}\n\nfunction activate(name)\n{\n    actions[name]();\n}\n\nfunction enable(name)\n{\n    if (typeof name === 'string') {\n        $('[data-action=\"' + name + '\"]').attr('disabled', false);\n    } else {\n        name.forEach(enable);\n    }\n}\n\nfunction disable(name)\n{\n    if (typeof name === 'string') {\n        $('[data-action=\"' + name + '\"]').attr('disabled', true);\n    } else {\n        name.forEach(disable);\n    }\n}\n\n/***/ },\n\n/***/ 51:\n/***/ function(module, exports, __webpack_require__) {\n\n/*\n * BlogSTEP \n * Copyright (c) 2016 Niels Sonnich Poulsen (http://nielssp.dk)\n * Licensed under the MIT license.\n * See the LICENSE file or http://opensource.org/licenses/MIT for more information.\n */\n\nvar $ = __webpack_require__(1);\nvar actions = __webpack_require__(2);\n\nvar $terminal = $('#terminal');\n\nvar buffer = '';\nvar cmdHistory = [];\nvar cmdHistoryPos = -1;\nvar readCallback = null;\n\nvar user = {};\nvar cwd = '/';\n\nvar PATH = $('body').data('path').replace(/\\/$/, '');\nvar TOKEN = $terminal.data('token');\n\nvar months = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n];\n\nactions.define('close', function () {\n    location.href = PATH + '/files' + cwd;\n});\n\nfunction convertPath(path)\n{\n    path = path.trim();\n    if (path.startsWith('~')) {\n        path = user.home + path.substr(1);\n    } else if (!path.startsWith('/')) {\n        path = cwd + '/' + path;\n    }\n    var names = path.split('/');\n    var stack = [];\n    for (var i = 0; i < names.length; i++) {\n        if (names[i] === '..') {\n            if (stack.length >= 1) {\n                stack.pop();\n            }\n        } else if (names[i] !== '' && names[i] !== '.') {\n            stack.push(names[i]);\n        }\n    }\n    return '/' + stack.join('/');\n}\n\nvar commands = {\n    clear: function (args) {\n        buffer = '';\n        flush();\n        prompt();\n    },\n    cd: function (args) {\n        var nwd = convertPath(args);\n        exec('list-files?path=' + nwd, {}, function (data) {\n            if (data.type === 'directory') {\n                cwd = nwd;\n            } else {\n                writeLine('not a directory');\n            }\n        });\n    },\n    pwd: function (args) {\n        writeLine(cwd);\n        prompt();\n    },\n    ls: function (args) {\n        exec('list-files?path=' + cwd, {}, function (data) {\n            if (typeof data.files !== 'undefined') {\n                data.files.forEach(function (file) {\n                    var line = file.modeString;\n                    line += ' \\t' + file.owner;\n                    line += ' \\t' + file.group;\n                    var date = new Date(file.modified * 1000);\n                    line += ' \\t' + date.getFullYear();\n                    line += ' ' + months[date.getMonth()];\n                    line += ' ' + date.getDate();\n                    line += ' \\t' + file.name;\n                    if (file.type === 'directory') {\n                        line += '/';\n                    }\n                    writeLine(line);\n                });\n            }\n        });\n    },\n    touch: function (args) {\n        exec('make-file', {path: convertPath(args)}, function (data) {\n        });\n    },\n    mkdir: function (args) {\n        exec('make-dir', {path: convertPath(args)}, function (data) {\n        });\n    },\n    rm: function (args) {\n        exec('delete', {path: convertPath(args)}, function (data) {\n        });\n    },\n    cp: function (args) {\n        args = args.split(' ');\n        exec('copy', {path: convertPath(args[0]), destination: convertPath(args[1])}, function (data) {\n        });\n    },\n    mv: function (args) {\n        args = args.split(' ');\n        exec('move', {path: convertPath(args[0]), destination: convertPath(args[1])}, function (data) {\n        });\n    },\n    cat: function (args) {\n        exec('download?path=' + convertPath(args), {}, function (data) {\n            writeLine(data);\n        });\n    },\n    exit: function (args) {\n        location.href = PATH + '/files' + convertPath(args);\n    },\n    open: function (args) {\n        location.href = PATH + '/open' + convertPath(args);\n    },\n    edit: function (args) {\n        location.href = PATH + '/edit' + convertPath(args);\n    },\n    cedit: function (args) {\n        location.href = PATH + '/code-edit' + convertPath(args);\n    }\n};\n\nfunction flush()\n{\n    $terminal.val(buffer);\n    $terminal[0].scrollTop = $terminal[0].scrollHeight;\n//    $terminal.scrollTop($terminal.innerHeight());\n}\n\nfunction write(content)\n{\n    buffer += content;\n    flush();\n}\n\nfunction writeLine(content)\n{\n    write(content + '\\n');\n}\n\nfunction readLine(callback)\n{\n    $terminal.attr('readonly', false).focus();\n    readCallback = callback;\n}\n\nfunction exec(command, data, success)\n{\n    data['request_token'] = TOKEN;\n    $.ajax({\n        url: PATH + '/api/' + command,\n        method: 'post',\n        data: data,\n        success: success,\n        error: function (xhr) {\n            writeLine(xhr.status + ' ' + xhr.statusText);\n        },\n        complete: prompt\n    });\n}\n\nfunction prompt()\n{\n    write(user.username + ' ' + cwd + '> ');\n    cmdHistoryPos = -1;\n    readLine(function (line) {\n        var m = line.trim().match(/^([^ ]+)(?: (.*))?/);\n        if (m === null) {\n            writeLine('Invalid command');\n            prompt();\n        } else {\n            var command = m[1];\n            if (commands.hasOwnProperty(command)) {\n                commands[command]((typeof m[2] === 'undefined')? '' : m[2]);\n            } else {\n                try {\n                    var data = (typeof m[2] === 'undefined') ? {} : JSON.parse(m[2]);\n                    exec(command, data, function (data) {\n                        writeLine(JSON.stringify(data, null, '  '));\n                    });\n                } catch (e) {\n                    writeLine(e);\n                    prompt();\n                }\n            }\n        }\n    });\n}\n\n$terminal.attr('readonly', true);\n$terminal.keydown(function (e) {\n    if (e.key === 'Enter' && !e.shiftKey) {\n        if (readCallback !== null) {\n            $terminal.attr('readonly', true).blur();\n            var line = $terminal.val().substr(buffer.length);\n            cmdHistory.push(line);\n            buffer += line + '\\n';\n            flush();\n            var callback = readCallback;\n            readCallback = null;\n            callback(line);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    } else if (e.key == 'ArrowUp') {\n        if (readCallback !== null) {\n            if (cmdHistory.length > 0) {\n                if (cmdHistoryPos < 0) {\n                    cmdHistoryPos = cmdHistory.length - 1;\n                } else if (cmdHistoryPos > 0) {\n                    cmdHistoryPos--;\n                }\n                $terminal.val(buffer + cmdHistory[cmdHistoryPos]);\n            }\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    } else if (e.key == 'ArrowDown') {\n        if (readCallback !== null) {\n            if (cmdHistory.length > 0 && cmdHistoryPos >= 0) {\n                if (cmdHistoryPos < cmdHistory.length - 1) {\n                    cmdHistoryPos++;\n                    $terminal.val(buffer + cmdHistory[cmdHistoryPos]);\n                } else {\n                    cmdHistoryPos = -1;\n                    $terminal.val(buffer);\n                }\n            }\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    } else if (e.key == 'ArrowLeft' || e.key == 'Backspace') {\n        var start = $terminal[0].selectionStart;\n        var end = $terminal[0].selectionEnd;\n        if (start === end) {\n            if (start <= buffer.length) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n});\n\n$terminal.click(function () {\n    var start = $terminal[0].selectionStart;\n    var end = $terminal[0].selectionEnd;\n    if (start === end) {\n        if (start < buffer.length) {\n            $terminal[0].selectionStart = $terminal.val().length;\n        }\n    }\n});\n\nexec('who-am-i', {}, function (data) {\n    user = data;\n});\n\n/***/ }\n\n},[51]);\n\n\n// WEBPACK FOOTER //\n// dist/terminal.js","/*\n * BlogSTEP \n * Copyright (c) 2016 Niels Sonnich Poulsen (http://nielssp.dk)\n * Licensed under the MIT license.\n * See the LICENSE file or http://opensource.org/licenses/MIT for more information.\n */\n\nvar $ = require('jquery');\n\nexports.define = defineAction;\nexports.enable = enable;\nexports.disable = disable;\nexports.activate = activate;\nexports.bind = bind;\n\nvar actions = {};\n\nvar keyMap = {};\n\n$(window).keydown(function (e) {\n    if (e.defaultPrevented) {\n        return;\n    }\n    var key = '';\n    if (e.ctrlKey) {\n        key += 'c-';\n    }\n    if (e.altKey) {\n        key += 'a-';\n    }\n    if (e.shiftKey) {\n        key += 's-';\n    }\n    key += e.key.toLowerCase();\n    console.log('pressed ' + key);\n    if (keyMap.hasOwnProperty(key)) {\n        activate(keyMap[key]);\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n    }\n});\n\nfunction bind(key, action)\n{\n    var parts = key.toLowerCase().split(/-|\\+/);\n    var e = { ctrlKey: '', altKey: '', shiftKey: '' };\n    var key = parts[parts.length - 1];\n    for (var i = 0; i < parts.length - 1; i++) {\n        switch (parts[i]) {\n            case 'c':\n                e.ctrlKey = 'c-';\n                break;\n            case 'a':\n                e.altKey = 'a-';\n                break;\n            case 's':\n                e.shiftKey = 's-';\n                break;\n        }\n    }\n    key = e.ctrlKey + e.altKey + e.shiftKey + key;\n    keyMap[key] = action;\n}\n\nfunction defineAction(name, callback)\n{\n    actions[name] = callback;\n    $('[data-action=\"' + name + '\"]').click(function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        callback();\n        return false;\n    });\n}\n\nfunction activate(name)\n{\n    actions[name]();\n}\n\nfunction enable(name)\n{\n    if (typeof name === 'string') {\n        $('[data-action=\"' + name + '\"]').attr('disabled', false);\n    } else {\n        name.forEach(enable);\n    }\n}\n\nfunction disable(name)\n{\n    if (typeof name === 'string') {\n        $('[data-action=\"' + name + '\"]').attr('disabled', true);\n    } else {\n        name.forEach(disable);\n    }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./common/actions.js\n// module id = 2\n// module chunks = 0 1 2 3","/*\n * BlogSTEP \n * Copyright (c) 2016 Niels Sonnich Poulsen (http://nielssp.dk)\n * Licensed under the MIT license.\n * See the LICENSE file or http://opensource.org/licenses/MIT for more information.\n */\n\nvar $ = require('jquery');\nvar actions = require('./common/actions');\n\nvar $terminal = $('#terminal');\n\nvar buffer = '';\nvar cmdHistory = [];\nvar cmdHistoryPos = -1;\nvar readCallback = null;\n\nvar user = {};\nvar cwd = '/';\n\nvar PATH = $('body').data('path').replace(/\\/$/, '');\nvar TOKEN = $terminal.data('token');\n\nvar months = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n];\n\nactions.define('close', function () {\n    location.href = PATH + '/files' + cwd;\n});\n\nfunction convertPath(path)\n{\n    path = path.trim();\n    if (path.startsWith('~')) {\n        path = user.home + path.substr(1);\n    } else if (!path.startsWith('/')) {\n        path = cwd + '/' + path;\n    }\n    var names = path.split('/');\n    var stack = [];\n    for (var i = 0; i < names.length; i++) {\n        if (names[i] === '..') {\n            if (stack.length >= 1) {\n                stack.pop();\n            }\n        } else if (names[i] !== '' && names[i] !== '.') {\n            stack.push(names[i]);\n        }\n    }\n    return '/' + stack.join('/');\n}\n\nvar commands = {\n    clear: function (args) {\n        buffer = '';\n        flush();\n        prompt();\n    },\n    cd: function (args) {\n        var nwd = convertPath(args);\n        exec('list-files?path=' + nwd, {}, function (data) {\n            if (data.type === 'directory') {\n                cwd = nwd;\n            } else {\n                writeLine('not a directory');\n            }\n        });\n    },\n    pwd: function (args) {\n        writeLine(cwd);\n        prompt();\n    },\n    ls: function (args) {\n        exec('list-files?path=' + cwd, {}, function (data) {\n            if (typeof data.files !== 'undefined') {\n                data.files.forEach(function (file) {\n                    var line = file.modeString;\n                    line += ' \\t' + file.owner;\n                    line += ' \\t' + file.group;\n                    var date = new Date(file.modified * 1000);\n                    line += ' \\t' + date.getFullYear();\n                    line += ' ' + months[date.getMonth()];\n                    line += ' ' + date.getDate();\n                    line += ' \\t' + file.name;\n                    if (file.type === 'directory') {\n                        line += '/';\n                    }\n                    writeLine(line);\n                });\n            }\n        });\n    },\n    touch: function (args) {\n        exec('make-file', {path: convertPath(args)}, function (data) {\n        });\n    },\n    mkdir: function (args) {\n        exec('make-dir', {path: convertPath(args)}, function (data) {\n        });\n    },\n    rm: function (args) {\n        exec('delete', {path: convertPath(args)}, function (data) {\n        });\n    },\n    cp: function (args) {\n        args = args.split(' ');\n        exec('copy', {path: convertPath(args[0]), destination: convertPath(args[1])}, function (data) {\n        });\n    },\n    mv: function (args) {\n        args = args.split(' ');\n        exec('move', {path: convertPath(args[0]), destination: convertPath(args[1])}, function (data) {\n        });\n    },\n    cat: function (args) {\n        exec('download?path=' + convertPath(args), {}, function (data) {\n            writeLine(data);\n        });\n    },\n    exit: function (args) {\n        location.href = PATH + '/files' + convertPath(args);\n    },\n    open: function (args) {\n        location.href = PATH + '/open' + convertPath(args);\n    },\n    edit: function (args) {\n        location.href = PATH + '/edit' + convertPath(args);\n    },\n    cedit: function (args) {\n        location.href = PATH + '/code-edit' + convertPath(args);\n    }\n};\n\nfunction flush()\n{\n    $terminal.val(buffer);\n    $terminal[0].scrollTop = $terminal[0].scrollHeight;\n//    $terminal.scrollTop($terminal.innerHeight());\n}\n\nfunction write(content)\n{\n    buffer += content;\n    flush();\n}\n\nfunction writeLine(content)\n{\n    write(content + '\\n');\n}\n\nfunction readLine(callback)\n{\n    $terminal.attr('readonly', false).focus();\n    readCallback = callback;\n}\n\nfunction exec(command, data, success)\n{\n    data['request_token'] = TOKEN;\n    $.ajax({\n        url: PATH + '/api/' + command,\n        method: 'post',\n        data: data,\n        success: success,\n        error: function (xhr) {\n            writeLine(xhr.status + ' ' + xhr.statusText);\n        },\n        complete: prompt\n    });\n}\n\nfunction prompt()\n{\n    write(user.username + ' ' + cwd + '> ');\n    cmdHistoryPos = -1;\n    readLine(function (line) {\n        var m = line.trim().match(/^([^ ]+)(?: (.*))?/);\n        if (m === null) {\n            writeLine('Invalid command');\n            prompt();\n        } else {\n            var command = m[1];\n            if (commands.hasOwnProperty(command)) {\n                commands[command]((typeof m[2] === 'undefined')? '' : m[2]);\n            } else {\n                try {\n                    var data = (typeof m[2] === 'undefined') ? {} : JSON.parse(m[2]);\n                    exec(command, data, function (data) {\n                        writeLine(JSON.stringify(data, null, '  '));\n                    });\n                } catch (e) {\n                    writeLine(e);\n                    prompt();\n                }\n            }\n        }\n    });\n}\n\n$terminal.attr('readonly', true);\n$terminal.keydown(function (e) {\n    if (e.key === 'Enter' && !e.shiftKey) {\n        if (readCallback !== null) {\n            $terminal.attr('readonly', true).blur();\n            var line = $terminal.val().substr(buffer.length);\n            cmdHistory.push(line);\n            buffer += line + '\\n';\n            flush();\n            var callback = readCallback;\n            readCallback = null;\n            callback(line);\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    } else if (e.key == 'ArrowUp') {\n        if (readCallback !== null) {\n            if (cmdHistory.length > 0) {\n                if (cmdHistoryPos < 0) {\n                    cmdHistoryPos = cmdHistory.length - 1;\n                } else if (cmdHistoryPos > 0) {\n                    cmdHistoryPos--;\n                }\n                $terminal.val(buffer + cmdHistory[cmdHistoryPos]);\n            }\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    } else if (e.key == 'ArrowDown') {\n        if (readCallback !== null) {\n            if (cmdHistory.length > 0 && cmdHistoryPos >= 0) {\n                if (cmdHistoryPos < cmdHistory.length - 1) {\n                    cmdHistoryPos++;\n                    $terminal.val(buffer + cmdHistory[cmdHistoryPos]);\n                } else {\n                    cmdHistoryPos = -1;\n                    $terminal.val(buffer);\n                }\n            }\n        }\n        e.preventDefault();\n        e.stopPropagation();\n    } else if (e.key == 'ArrowLeft' || e.key == 'Backspace') {\n        var start = $terminal[0].selectionStart;\n        var end = $terminal[0].selectionEnd;\n        if (start === end) {\n            if (start <= buffer.length) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        }\n    }\n});\n\n$terminal.click(function () {\n    var start = $terminal[0].selectionStart;\n    var end = $terminal[0].selectionEnd;\n    if (start === end) {\n        if (start < buffer.length) {\n            $terminal[0].selectionStart = $terminal.val().length;\n        }\n    }\n});\n\nexec('who-am-i', {}, function (data) {\n    user = data;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./terminal.js\n// module id = 51\n// module chunks = 3"],"sourceRoot":""}